// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.1
// source: v1/ecaptureq.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogType int32

const (
	LogType_LOG_TYPE_HEARTBEAT   LogType = 0
	LogType_LOG_TYPE_PROCESS_LOG LogType = 1
	LogType_LOG_TYPE_EVENT       LogType = 2
)

// Enum value maps for LogType.
var (
	LogType_name = map[int32]string{
		0: "LOG_TYPE_HEARTBEAT",
		1: "LOG_TYPE_PROCESS_LOG",
		2: "LOG_TYPE_EVENT",
	}
	LogType_value = map[string]int32{
		"LOG_TYPE_HEARTBEAT":   0,
		"LOG_TYPE_PROCESS_LOG": 1,
		"LOG_TYPE_EVENT":       2,
	}
)

func (x LogType) Enum() *LogType {
	p := new(LogType)
	*p = x
	return p
}

func (x LogType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_ecaptureq_proto_enumTypes[0].Descriptor()
}

func (LogType) Type() protoreflect.EnumType {
	return &file_v1_ecaptureq_proto_enumTypes[0]
}

func (x LogType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogType.Descriptor instead.
func (LogType) EnumDescriptor() ([]byte, []int) {
	return file_v1_ecaptureq_proto_rawDescGZIP(), []int{0}
}

// Base 消息定义
type Event struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Uuid          string                 `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	SrcIp         string                 `protobuf:"bytes,3,opt,name=src_ip,json=srcIp,proto3" json:"src_ip,omitempty"`
	SrcPort       uint32                 `protobuf:"varint,4,opt,name=src_port,json=srcPort,proto3" json:"src_port,omitempty"`
	DstIp         string                 `protobuf:"bytes,5,opt,name=dst_ip,json=dstIp,proto3" json:"dst_ip,omitempty"`
	DstPort       uint32                 `protobuf:"varint,6,opt,name=dst_port,json=dstPort,proto3" json:"dst_port,omitempty"`
	Pid           int64                  `protobuf:"varint,7,opt,name=pid,proto3" json:"pid,omitempty"`
	Pname         string                 `protobuf:"bytes,8,opt,name=pname,proto3" json:"pname,omitempty"`
	Type          uint32                 `protobuf:"varint,9,opt,name=type,proto3" json:"type,omitempty"`
	Length        uint32                 `protobuf:"varint,10,opt,name=length,proto3" json:"length,omitempty"`
	Payload       []byte                 `protobuf:"bytes,11,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_v1_ecaptureq_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_v1_ecaptureq_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_v1_ecaptureq_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Event) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Event) GetSrcIp() string {
	if x != nil {
		return x.SrcIp
	}
	return ""
}

func (x *Event) GetSrcPort() uint32 {
	if x != nil {
		return x.SrcPort
	}
	return 0
}

func (x *Event) GetDstIp() string {
	if x != nil {
		return x.DstIp
	}
	return ""
}

func (x *Event) GetDstPort() uint32 {
	if x != nil {
		return x.DstPort
	}
	return 0
}

func (x *Event) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *Event) GetPname() string {
	if x != nil {
		return x.Pname
	}
	return ""
}

func (x *Event) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Event) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *Event) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type Heartbeat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Count         int64                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Heartbeat) Reset() {
	*x = Heartbeat{}
	mi := &file_v1_ecaptureq_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Heartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Heartbeat) ProtoMessage() {}

func (x *Heartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_v1_ecaptureq_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Heartbeat.ProtoReflect.Descriptor instead.
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return file_v1_ecaptureq_proto_rawDescGZIP(), []int{1}
}

func (x *Heartbeat) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Heartbeat) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Heartbeat) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type LogEntry struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	LogType LogType                `protobuf:"varint,1,opt,name=log_type,json=logType,proto3,enum=event.LogType" json:"log_type,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*LogEntry_EventPayload
	//	*LogEntry_HeartbeatPayload
	//	*LogEntry_RunLog
	Payload       isLogEntry_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	mi := &file_v1_ecaptureq_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_v1_ecaptureq_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_v1_ecaptureq_proto_rawDescGZIP(), []int{2}
}

func (x *LogEntry) GetLogType() LogType {
	if x != nil {
		return x.LogType
	}
	return LogType_LOG_TYPE_HEARTBEAT
}

func (x *LogEntry) GetPayload() isLogEntry_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *LogEntry) GetEventPayload() *Event {
	if x != nil {
		if x, ok := x.Payload.(*LogEntry_EventPayload); ok {
			return x.EventPayload
		}
	}
	return nil
}

func (x *LogEntry) GetHeartbeatPayload() *Heartbeat {
	if x != nil {
		if x, ok := x.Payload.(*LogEntry_HeartbeatPayload); ok {
			return x.HeartbeatPayload
		}
	}
	return nil
}

func (x *LogEntry) GetRunLog() string {
	if x != nil {
		if x, ok := x.Payload.(*LogEntry_RunLog); ok {
			return x.RunLog
		}
	}
	return ""
}

type isLogEntry_Payload interface {
	isLogEntry_Payload()
}

type LogEntry_EventPayload struct {
	EventPayload *Event `protobuf:"bytes,2,opt,name=event_payload,json=eventPayload,proto3,oneof"`
}

type LogEntry_HeartbeatPayload struct {
	HeartbeatPayload *Heartbeat `protobuf:"bytes,3,opt,name=heartbeat_payload,json=heartbeatPayload,proto3,oneof"`
}

type LogEntry_RunLog struct {
	RunLog string `protobuf:"bytes,4,opt,name=run_log,json=runLog,proto3,oneof"`
}

func (*LogEntry_EventPayload) isLogEntry_Payload() {}

func (*LogEntry_HeartbeatPayload) isLogEntry_Payload() {}

func (*LogEntry_RunLog) isLogEntry_Payload() {}

var File_v1_ecaptureq_proto protoreflect.FileDescriptor

const file_v1_ecaptureq_proto_rawDesc = "" +
	"\n" +
	"\x12v1/ecaptureq.proto\x12\x05event\"\x8b\x02\n" +
	"\x05Event\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12\x12\n" +
	"\x04uuid\x18\x02 \x01(\tR\x04uuid\x12\x15\n" +
	"\x06src_ip\x18\x03 \x01(\tR\x05srcIp\x12\x19\n" +
	"\bsrc_port\x18\x04 \x01(\rR\asrcPort\x12\x15\n" +
	"\x06dst_ip\x18\x05 \x01(\tR\x05dstIp\x12\x19\n" +
	"\bdst_port\x18\x06 \x01(\rR\adstPort\x12\x10\n" +
	"\x03pid\x18\a \x01(\x03R\x03pid\x12\x14\n" +
	"\x05pname\x18\b \x01(\tR\x05pname\x12\x12\n" +
	"\x04type\x18\t \x01(\rR\x04type\x12\x16\n" +
	"\x06length\x18\n" +
	" \x01(\rR\x06length\x12\x18\n" +
	"\apayload\x18\v \x01(\fR\apayload\"Y\n" +
	"\tHeartbeat\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x03R\x05count\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"\xd1\x01\n" +
	"\bLogEntry\x12)\n" +
	"\blog_type\x18\x01 \x01(\x0e2\x0e.event.LogTypeR\alogType\x123\n" +
	"\revent_payload\x18\x02 \x01(\v2\f.event.EventH\x00R\feventPayload\x12?\n" +
	"\x11heartbeat_payload\x18\x03 \x01(\v2\x10.event.HeartbeatH\x00R\x10heartbeatPayload\x12\x19\n" +
	"\arun_log\x18\x04 \x01(\tH\x00R\x06runLogB\t\n" +
	"\apayload*O\n" +
	"\aLogType\x12\x16\n" +
	"\x12LOG_TYPE_HEARTBEAT\x10\x00\x12\x18\n" +
	"\x14LOG_TYPE_PROCESS_LOG\x10\x01\x12\x12\n" +
	"\x0eLOG_TYPE_EVENT\x10\x02B\x06Z\x04./pbb\x06proto3"

var (
	file_v1_ecaptureq_proto_rawDescOnce sync.Once
	file_v1_ecaptureq_proto_rawDescData []byte
)

func file_v1_ecaptureq_proto_rawDescGZIP() []byte {
	file_v1_ecaptureq_proto_rawDescOnce.Do(func() {
		file_v1_ecaptureq_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_ecaptureq_proto_rawDesc), len(file_v1_ecaptureq_proto_rawDesc)))
	})
	return file_v1_ecaptureq_proto_rawDescData
}

var file_v1_ecaptureq_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_v1_ecaptureq_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_v1_ecaptureq_proto_goTypes = []any{
	(LogType)(0),      // 0: event.LogType
	(*Event)(nil),     // 1: event.Event
	(*Heartbeat)(nil), // 2: event.Heartbeat
	(*LogEntry)(nil),  // 3: event.LogEntry
}
var file_v1_ecaptureq_proto_depIdxs = []int32{
	0, // 0: event.LogEntry.log_type:type_name -> event.LogType
	1, // 1: event.LogEntry.event_payload:type_name -> event.Event
	2, // 2: event.LogEntry.heartbeat_payload:type_name -> event.Heartbeat
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_v1_ecaptureq_proto_init() }
func file_v1_ecaptureq_proto_init() {
	if File_v1_ecaptureq_proto != nil {
		return
	}
	file_v1_ecaptureq_proto_msgTypes[2].OneofWrappers = []any{
		(*LogEntry_EventPayload)(nil),
		(*LogEntry_HeartbeatPayload)(nil),
		(*LogEntry_RunLog)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_ecaptureq_proto_rawDesc), len(file_v1_ecaptureq_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_ecaptureq_proto_goTypes,
		DependencyIndexes: file_v1_ecaptureq_proto_depIdxs,
		EnumInfos:         file_v1_ecaptureq_proto_enumTypes,
		MessageInfos:      file_v1_ecaptureq_proto_msgTypes,
	}.Build()
	File_v1_ecaptureq_proto = out.File
	file_v1_ecaptureq_proto_goTypes = nil
	file_v1_ecaptureq_proto_depIdxs = nil
}
